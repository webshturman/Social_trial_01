{"version":3,"sources":["Components/Profile/MyPosts/MyPosts.module.css","Components/redux/actions.ts","Components/NavBar/NavBar.tsx","Components/Dialogs/Messages/Message.tsx","Components/Dialogs/Senders/Sender.tsx","Components/Dialogs/Dialogs.tsx","Components/News/News.tsx","Components/Music/Music.tsx","Components/Settings/Settings.tsx","api/instance.ts","api/auth-api.ts","Components/redux/auth-reducer.ts","Components/Header/Header.tsx","Components/Header/HeaderContainer.tsx","api/user-api.ts","Components/redux/users-reducer.ts","Components/Users/User.tsx","Components/Users/UsersC.tsx","hoc/withAuthRedirect.tsx","Components/Profile/ProfileContainer.tsx","Components/Users/UsersContainer.tsx","Components/Login/Login.tsx","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/ProfileInfo/ProfileStatus.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/Profile.tsx","Components/redux/profile-reducer.ts","App.tsx","reportWebVitals.js","Components/redux/dialog-reducer.ts","Components/redux/loader-reducer.ts","Components/redux/store.ts","index.tsx","Components/NavBar/NavBar.module.css","Components/Dialogs/Dialogs.module.css","Components/Users/Users.module.css","Components/Header/Header.module.css","Components/Profile/Profile.module.css","Components/Profile/MyPosts/Post/Post.module.css"],"names":["module","exports","ACTIONS_TYPE","NavBar","className","s","nav","item","IconButton","size","style","padding","fontSize","to","isActive","active","Message","message","id","Sender","name","avatar","path","senderInfo","src","senderAva","alt","setUserStatus","status","type","SET_USER_STATUS","followUser","isFollow","userID","FOLLOW_USER","getUsersFromApi","users","GET_USERS","setCurrentPage","page","SET_CURRENT_PAGE","setTotalCount","count","SET_TOTAL_COUNT","setLoadingStatus","SET_LOADING_STATUS","setAuthData","data","GET_AUTH_DATA","setErrorMessage","SET_ERROR_MESSAGE","Dialogs","useSelector","state","dialog","senders","messages","isAuth","auth","dispatch","useDispatch","useState","inputValue","setInputValue","dialogs","map","sender","messageBlock","noValidate","autoComplete","TextField","label","fullWidth","value","variant","margin","multiline","onChange","e","currentTarget","Grid","container","justify","Button","color","onClick","newMessage","SEND_MESSAGE","News","Music","Settings","instance","axios","create","baseURL","withCredentials","headers","AuthAPI","get","post","delete","InitialState","email","login","errorMessage","Header","header","loginLink","a","resultCode","HeaderContainer","this","props","React","Component","AuthDataConnector","connect","UsersAPI","userId","put","items","totalCount","pageSize","currentPage","loadingStatus","User","photos","followed","photo","small","UserBlock","followImgBlock","userImg","UsersC","getUsersForCurrentPage","pagesAmount","Math","ceil","pages","i","push","usersContainer","pageNum","selectedPage","pageNumber","LinearProgress","usersList","user","uniqueUrlName","showButton","mapStateToProps","withAuthRedirect","restProps","WrappedComponent","UsersContainer","setUsersForCurrentPage","setUsers","compose","res","Login","formik","useFormik","initialValues","password","rememberMe","validate","values","errors","test","length","onSubmit","SET_LOGIN_STATUS","resetForm","justifyContent","handleSubmit","FormControl","FormLabel","href","target","FormGroup","getFieldProps","error","touched","helperText","FormControlLabel","control","Checkbox","checked","Post","likeCounts","newpost","likes","ThumbUpAltSharp","MyPosts","posts","profile","setValue","myposts","Container","fixed","newText","ADD_POST","ProfileStatus","handleUpdateStatus","editMode","setEditMode","onDoubleClick","onBlur","autoFocus","event","ProfileInfo","background","info","large","fullName","aboutMe","Profile","v1","ProfileContainer","authorizedId","getProfileData","getUserStatusData","updateUserStatusData","withUrlData","useParams","ProfileConnector","GET_PROFILE","App","isInitialized","loader","useEffect","authData","initialized","GET_INITIALIZED","element","position","top","textAlign","width","CircularProgress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","InitialLoaderState","rootReducer","combineReducers","action","newPost","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.417725bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myposts\":\"MyPosts_myposts__zyH8U\",\"form\":\"MyPosts_form__2icMI\",\"footer\":\"MyPosts_footer__2fOpr\"};","import {ProfileType, UserType} from \"../../api/user-api\";\r\nimport {InitialStateAuthType} from \"./auth-reducer\";\r\n\r\n\r\nexport enum ACTIONS_TYPE {\r\n    ADD_POST = 'MyPosts/ADD_POST',\r\n    SEND_MESSAGE = 'Messages/SEND_MESSAGE ',\r\n    FOLLOW_USER = 'Users/FOLLOW_USER',\r\n    GET_USERS = 'Users/GET_USERS',\r\n    GET_PROFILE='ProfileInfo/GET_PROFILE',\r\n    SET_CURRENT_PAGE = 'Users/SET_CURRENT_PAGE',\r\n    SET_TOTAL_COUNT = 'Users/SET_TOTAL_COUNT',\r\n    SET_LOADING_STATUS = 'Users/SET_LOADING_STATUS',\r\n    GET_AUTH_DATA = 'auth/GET_AUTH_DATA',\r\n    SET_USER_STATUS = 'profile/SET_USER_STATUS',\r\n    SET_LOGIN_STATUS = 'auth/SET_USER_STATUS',\r\n    SET_ERROR_MESSAGE = 'auth/SET_ERROR_MESSAGE',\r\n    GET_INITIALIZED ='loader/GET_INITIALIZED',\r\n}\r\n//----------------------------PROFILE-----------------------------\r\nexport type ProfileActionType = ReturnType<typeof addPostAC> | ReturnType<typeof getProfile> |\r\n    ReturnType<typeof setUserStatus>\r\n\r\nexport const addPostAC = (newText:string) => {\r\n    return {type:ACTIONS_TYPE.ADD_POST, newText} as const\r\n}\r\nexport const getProfile = (profile:ProfileType) => {\r\n    return {type:ACTIONS_TYPE.GET_PROFILE, profile} as const\r\n}\r\nexport const setUserStatus = (status: string) => {\r\n    return {type:ACTIONS_TYPE.SET_USER_STATUS, status} as const\r\n}\r\n// export const updateUserStatus = (profile:ProfileType) => {\r\n//     return {type:ACTIONS_TYPE.UPDATE_USER_STATUS, profile} as const\r\n// }\r\n//-------------------------MESSAGES---------------------------------\r\n\r\nexport type SendMessageActionType = ReturnType<typeof sendMessageAC>\r\n\r\nexport const sendMessageAC = (newMessage:string) => {\r\n    return {type:ACTIONS_TYPE.SEND_MESSAGE, newMessage} as const\r\n}\r\n\r\n//---------------------------USERS----------------------------------\r\n\r\nexport type CommonUsersActionType = ReturnType<typeof followUser> | ReturnType<typeof getUsersFromApi> |\r\n    ReturnType<typeof setCurrentPage> | ReturnType<typeof setTotalCount> | ReturnType<typeof setLoadingStatus>\r\n\r\nexport const followUser =(isFollow:boolean, userID:number)=> {\r\n    return {type:ACTIONS_TYPE.FOLLOW_USER, isFollow,userID} as const\r\n}\r\nexport const getUsersFromApi=(users:Array<UserType>)=> {\r\n    return {type:ACTIONS_TYPE.GET_USERS, users} as const\r\n}\r\nexport const setCurrentPage=(page:number)=> {\r\n    return {type:ACTIONS_TYPE.SET_CURRENT_PAGE, page} as const\r\n}\r\nexport const setTotalCount=(count:number)=> {\r\n    return {type:ACTIONS_TYPE.SET_TOTAL_COUNT, count} as const\r\n}\r\nexport const setLoadingStatus=(status:boolean)=> {\r\n    return {type:ACTIONS_TYPE.SET_LOADING_STATUS, status} as const\r\n}\r\n\r\n//---------------------------AUTH DATA----------------------------------\r\nexport type AuthDataActionType = ReturnType<typeof setAuthData> | ReturnType<typeof setLoginStatus>\r\n| ReturnType<typeof setErrorMessage>\r\n\r\nexport const setAuthData =(data:InitialStateAuthType)=> {\r\n    return {type:ACTIONS_TYPE.GET_AUTH_DATA, data} as const\r\n}\r\nexport const setLoginStatus =(isAuth:boolean)=> {\r\n    return {type:ACTIONS_TYPE.SET_LOGIN_STATUS, isAuth} as const\r\n}\r\nexport const setErrorMessage =(message:string | null)=> {\r\n    return {type:ACTIONS_TYPE.SET_ERROR_MESSAGE, message} as const\r\n}\r\n//---------------------------LOADER----------------------------------\r\nexport type LoaderActionType = ReturnType<typeof getInitialized>\r\n\r\nexport const getInitialized =(initialized:boolean)=> {\r\n    return {type:ACTIONS_TYPE.GET_INITIALIZED, initialized} as const\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './NavBar.module.css'\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport MailOutlineOutlinedIcon from '@material-ui/icons/MailOutlineOutlined';\r\nimport TvOutlinedIcon from '@material-ui/icons/TvOutlined';\r\nimport MusicVideoOutlinedIcon from '@material-ui/icons/MusicVideoOutlined';\r\nimport SettingsApplicationsOutlinedIcon from '@material-ui/icons/SettingsApplicationsOutlined';\r\nimport GroupAddOutlinedIcon from '@material-ui/icons/GroupAddOutlined';\r\n\r\nexport const NavBar: React.FC = () => {\r\n\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <IconButton size={'medium'} style={{padding:\"0 5px 0 0\"}}>\r\n                <AccountCircleOutlinedIcon style={{fontSize:\"1rem\"}}/>\r\n            </IconButton>\r\n            {/*<NavLink to={'/profile'} activeClassName={s.active}>Profile</NavLink>*/}\r\n            {/*@ts-ignore*/}\r\n            <NavLink to={'/profile'} className={({isActive}) => isActive ? s.active :''}>Profile</NavLink>\r\n\r\n        </div>\r\n        <div className={s.item} >\r\n            <IconButton size={'medium'} style={{padding:\"0 5px 0 0\"}}>\r\n                <MailOutlineOutlinedIcon style={{fontSize:\"1rem\"}}/>\r\n            </IconButton>\r\n            {/*<NavLink to={'/dialogs'} activeClassName={s.active}>Messages</NavLink>*/}\r\n            <NavLink to={'/dialogs'} className={({isActive}) => isActive ? s.active :''}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <IconButton size={'medium'} style={{padding:\"0 5px 0 0\"}}>\r\n                <TvOutlinedIcon style={{fontSize:\"1rem\"}}/>\r\n            </IconButton>\r\n            {/*<NavLink to={'/news'} activeClassName={s.active}>News</NavLink>*/}\r\n            <NavLink to={'/news'}  className={({isActive}) => isActive ? s.active :''}>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <IconButton size={'medium'} style={{padding:\"0 5px 0 0\"}}>\r\n                <MusicVideoOutlinedIcon style={{fontSize:\"1rem\"}}/>\r\n            </IconButton>\r\n            {/*<NavLink to={'/music'} activeClassName={s.active}>Music</NavLink>*/}\r\n            <NavLink to={'/music'}  className={({isActive}) => isActive ? s.active :''}>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <IconButton size={'medium'} style={{padding:\"0 5px 0 0\"}}>\r\n                <GroupAddOutlinedIcon style={{fontSize:\"1rem\"}}/>\r\n            </IconButton>\r\n            {/*<NavLink to={'/users'} activeClassName={s.active}>Find User</NavLink>*/}\r\n            <NavLink to={'/users'}  className={({isActive}) => isActive ? s.active :''}>Find User</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <IconButton size={'medium'} style={{padding:\"0 5px 0 0\"}}>\r\n                <SettingsApplicationsOutlinedIcon style={{fontSize:\"1rem\"}}/>\r\n            </IconButton>\r\n            {/*<NavLink to={'/settings'} activeClassName={s.active}>Settings</NavLink>*/}\r\n            <NavLink to={'/settings'}  className={({isActive}) => isActive ? s.active :''}>Settings</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n","import s from '../Dialogs.module.css'\r\nimport React from \"react\";\r\nimport {MessagesType} from \"../../redux/dialog-reducer\";\r\n\r\n\r\nexport const Message: React.FC<MessagesType> = ({message,id}) =>{\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            {/*{dialog.messages.map(m => <div key={m.id}>{m.message}</div>)}*/}\r\n            <div key={id}>{message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// export const Message: React.FC<DialogsPropsType> = ({dialog,dispatch}) =>{\r\n//     const [inputValue,setInputValue] = useState('')\r\n//     const changeMessageText = (e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) =>{\r\n//         setInputValue(e.currentTarget.value)\r\n//     }\r\n//     const sendingMessage = () => {\r\n//         dispatch(sendMessageAC(inputValue))\r\n//         setInputValue('')\r\n//     }\r\n//     return (\r\n//         <div className={s.item}>\r\n//             {/*{dialog.messages.map(m => <div key={m.id}>{m.message}</div>)}*/}\r\n//             <div key={m.id}>{m.message}</div>)}\r\n//             {/*<Container fixed>*/}\r\n//             <form noValidate autoComplete=\"off\" >\r\n//                 <TextField id=\"outlined-basic\" label=\"Write a message\" fullWidth={true} value={inputValue}\r\n//                            variant=\"outlined\" style={{margin: \"20px 0 10px 0\"}}\r\n//                            multiline={true} onChange={changeMessageText}\r\n//                 />\r\n//                 <Grid container justify={\"flex-end\"}>\r\n//                     <div></div>\r\n//                     <Button variant=\"contained\" color=\"primary\" size={'small'} onClick={sendingMessage}>\r\n//                         Send Message\r\n//                     </Button>\r\n//                 </Grid>\r\n//             </form>\r\n//             {/*</Container>*/}\r\n//         </div>\r\n//     )\r\n// }","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from '../Dialogs.module.css'\r\nimport {senderType} from \"../../redux/dialog-reducer\";\r\n\r\n\r\n\r\n\r\nexport const Sender: React.FC<senderType> = ({id, name, avatar}) => {\r\n    let path = `/dialogs/${id}`\r\n\r\n    return (\r\n\r\n        <div>\r\n            {/*<li key={id}><NavLink to={path} activeClassName={s.active}>*/}\r\n            <li key={id}><NavLink to={path}  className={({isActive}) => isActive ? s.active :''}>\r\n                <div  className={s.senderInfo}>\r\n                    <img src={avatar} className={s.senderAva} alt=\"\"/>\r\n                    <div>{name}</div>\r\n                </div>\r\n            </NavLink></li>\r\n        </div>\r\n    )\r\n}\r\n//\r\n// export const Senders: React.FC<senderType > = (props) => {\r\n//\r\n//     return (\r\n//         <ul className={`${s.item}  ${s.senders}`}>\r\n//             {dialog.sender.map((t) => {\r\n//                 let path = `/dialogs/${t.id}`\r\n//                 return (\r\n//                     <div className={s.senderInfo}>\r\n//                         <img src={props.avatar} className={s.senderAva} alt=\"\"/>\r\n//                         <li key={props.id}><NavLink to={path} activeClassName={s.active}>{props.name}</NavLink></li>\r\n//                     </div>\r\n//                 )\r\n//             })\r\n//             }\r\n//         </ul>\r\n//     )\r\n// }","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {Message} from \"./Messages/Message\";\r\nimport {Sender} from \"./Senders/Sender\";\r\nimport {Button, Grid, TextField} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../redux/store\";\r\nimport {DialogPageType} from \"../redux/dialog-reducer\";\r\nimport {sendMessageAC} from \"../redux/actions\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport const Dialogs = () => {\r\n\r\n    const {senders, messages} = useSelector<AppRootStateType, DialogPageType>(state=> state.dialog);\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.auth.isAuth)\r\n    const dispatch = useDispatch();\r\n\r\n    const EMPTY_STRING =''\r\n\r\n    const [inputValue, setInputValue] = useState(EMPTY_STRING);\r\n    const changeMessageText = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        setInputValue(e.currentTarget.value)\r\n    }\r\n    const sendingMessage = () => {\r\n        dispatch(sendMessageAC(inputValue))\r\n        setInputValue(EMPTY_STRING)\r\n    }\r\n    if (!isAuth) return <Navigate to={'/'}/>\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <ul className={`${s.item}  ${s.senders}`}>\r\n                {senders.map(sender => <Sender id={sender.id} name={sender.name} avatar={sender.avatar}\r\n                                               key={sender.id}/>)}\r\n            </ul>\r\n            <div className={s.messageBlock}>\r\n                {messages.map(message => <Message key={message.id} message={message.message} id={message.id}/>)}\r\n                <div>\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <TextField id=\"outlined-basic\" label=\"Write a message\" fullWidth={true} value={inputValue}\r\n                                   variant=\"outlined\" style={{margin: \"20px 0 10px 0\"}}\r\n                                   multiline={true} onChange={changeMessageText}\r\n                        />\r\n                        <Grid container justify={\"flex-end\"}>\r\n                            <div></div>\r\n                            <Button variant=\"contained\" color=\"primary\" size={'small'} onClick={sendingMessage}>\r\n                                Send Message\r\n                            </Button>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const News = () =>{\r\n    return (\r\n        <div>News</div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Music = () =>{\r\n    return (\r\n        <div>Musik</div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Settings = () =>{\r\n    return (\r\n        <div>Settings</div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials:true,\r\n    headers: {\r\n        'API-KEY': 'b8b0c036-4edd-4913-8c7f-79ccaeace603'\r\n    },\r\n})","import {instance} from \"./instance\";\r\nimport {AuthDataType, LoginDataType, ResponseType} from \"./user-api\";\r\n\r\nexport const AuthAPI = {\r\n    authMe(){\r\n        return instance.get<ResponseType<AuthDataType>>(`auth/me`)\r\n    },\r\n    authLogin(data:LoginDataType){\r\n        return instance.post<ResponseType<{userId:number}>>('auth/login',data)\r\n    },\r\n    authLogout(){\r\n        return instance.delete<ResponseType>('auth/login')\r\n    },\r\n}","import {\r\n    ACTIONS_TYPE,\r\n    AuthDataActionType,\r\n    getInitialized,\r\n    setAuthData,\r\n    setErrorMessage,\r\n    setLoginStatus\r\n} from \"./actions\";\r\nimport {AuthDataType, LoginDataType} from \"../../api/user-api\";\r\nimport {AppThunk} from \"./store\";\r\nimport { AuthAPI } from \"../../api/auth-api\";\r\n\r\n\r\n\r\nconst InitialState:InitialStateAuthType = {\r\n    id:null,\r\n    email:null,\r\n    login:null,\r\n    isAuth:false,\r\n    errorMessage:null\r\n}\r\n\r\nexport const authReducer = (state:InitialStateAuthType=InitialState, action:AuthDataActionType):InitialStateAuthType=>{\r\n    switch(action.type){\r\n        case ACTIONS_TYPE.GET_AUTH_DATA:\r\n            return {...state, ...action.data};\r\n        case ACTIONS_TYPE.SET_LOGIN_STATUS:\r\n            return {...state, isAuth:action.isAuth};\r\n        case ACTIONS_TYPE.SET_ERROR_MESSAGE:\r\n            return {...state, errorMessage:action.message};\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const toBeAuthorized =():AppThunk=>async dispatch=>{\r\n    try{\r\n        const res = await AuthAPI.authMe()\r\n        if(res.data.resultCode===0){\r\n            const authData = {...res.data.data, isAuth:true}\r\n            dispatch(setAuthData(authData))\r\n\r\n        } else{\r\n\r\n        }\r\n        dispatch(getInitialized(true))\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\nexport const toBeLoggedIn = (data:LoginDataType):AppThunk=>async dispatch=>{\r\n    try{\r\n        const res = await AuthAPI.authLogin(data)\r\n        if(res.data.resultCode===0){\r\n            dispatch(setErrorMessage(null))\r\n            dispatch(setLoginStatus(true))\r\n        } else{\r\n            dispatch(setErrorMessage(res.data.messages[0]))\r\n        }\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\nexport const toBeLoggedOut =():AppThunk=>async dispatch=>{\r\n    try{\r\n        const res = await AuthAPI.authLogout()\r\n        if(res.data.resultCode===0){\r\n            const cleanData = {id:null, email:null, login:null, isAuth:false}\r\n            dispatch(setAuthData(cleanData))\r\n        }\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport type InitialStateAuthType = AuthDataType & {\r\n    isAuth:boolean\r\n    errorMessage?:string | null\r\n}","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport {AuthDataCommonType} from \"./HeaderContainer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {toBeLoggedOut} from \"../redux/auth-reducer\";\r\n\r\nexport const Header: React.FC<AuthDataCommonType> = ({data,isAuth}) => {\r\n    const dispatch = useDispatch()\r\n    const handleLogOut =()=>{\r\n        dispatch(toBeLoggedOut())\r\n    }\r\n    return  <>\r\n        <header className={s.header}>\r\n            <img src=\"https://mythemestore.com/beehive-preview/wp-content/uploads/2020/07/logo-icon.svg\" alt=\"\"/>\r\n            {/*<LinearProgress />*/}\r\n            {isAuth &&\r\n            <div className={s.login}>\r\n                <div className={s.loginLink}>{data.login}</div>\r\n                <button onClick={handleLogOut}>LogOut</button>\r\n            </div>\r\n                }\r\n         </header>\r\n        </>\r\n}","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {AuthDataType} from \"../../api/user-api\";\r\nimport {AppRootStateType} from \"../redux/store\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nexport class HeaderContainer extends React.Component<AuthDataCommonType, AppRootStateType>{\r\n\r\n    // componentDidMount() {\r\n    //   this.props.toBeAuthorized()\r\n    // };\r\n\r\n    render(){\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): mapStateToPropsType => {\r\n    return {\r\n        data:state.auth,\r\n        isAuth:state.auth.isAuth\r\n    }\r\n}\r\nexport const AuthDataConnector = connect(mapStateToProps)(HeaderContainer)\r\n\r\n\r\nexport type mapStateToPropsType = {\r\n    data:AuthDataType\r\n    isAuth:boolean\r\n}\r\n\r\n// export type mapDispatchPropsType = {\r\n//     toBeAuthorized:()=>void\r\n// }\r\nexport type AuthDataCommonType = mapStateToPropsType\r\n// export type AuthDataCommonType = mapDispatchPropsType & mapStateToPropsType","import { instance } from \"./instance\"\r\n\r\nexport const UsersAPI = {\r\n    getUsers(page:number, count:number){\r\n       return instance.get<GetUsersType>(`users?page=${page}&count=${count}`)\r\n    },\r\n    getProfile(userId:string){\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n    },\r\n    setFollowStatus(userId:number){\r\n        return instance.post<ResponseType<UserType>>(`follow/${userId}`)\r\n    },\r\n    deleteFollowStatus(userId:number){\r\n        return instance.delete<ResponseType<UserType>>(`follow/${userId}`)\r\n    },\r\n    getUserStatus(userId:string){\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateUserStatus(status:string){\r\n        return instance.put<ResponseType>('profile/status', {status})\r\n    },\r\n}\r\n\r\ntype GetUsersType={\r\n    items:UserType[]\r\n    totalCount:number\r\n    error: string\r\n}\r\nexport type UserType={\r\n    name: string,\r\n    id: number\r\n    uniqueUrlName: null\r\n    photos: {\r\n        small: null | string\r\n        large: null | string\r\n    }\r\n    status: null\r\n    followed: boolean\r\n}\r\n\r\nexport type ProfileType={\r\n    aboutMe: string,\r\n    contacts: {\r\n        facebook: string,\r\n        website: string | null,\r\n        vk: string,\r\n        twitter: string,\r\n        instagram: string,\r\n        youtube: string | null,\r\n        github: string,\r\n        mainLink: string | null,\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: {\r\n        small: null | string,\r\n        large: null | string\r\n    }\r\n}\r\n\r\nexport type ResponseType<T={}>={\r\n    resultCode: number\r\n    fieldsErrors: string[]\r\n    messages: string[]\r\n    data: T\r\n}\r\nexport type AuthDataType={\r\n    id:string | null\r\n    email:string | null\r\n    login:string | null\r\n}\r\nexport type LoginDataType = FormikErrorType & {\r\n    captcha?: boolean\r\n}\r\nexport type FormikErrorType ={\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}","import {\r\n    ACTIONS_TYPE,\r\n    CommonUsersActionType,\r\n    followUser,\r\n    getUsersFromApi, setCurrentPage,\r\n    setLoadingStatus,\r\n    setTotalCount\r\n} from \"./actions\";\r\nimport {UsersAPI, UserType} from \"../../api/user-api\";\r\nimport {AppThunk} from \"./store\";\r\n\r\nconst InitialState:InitialStateUsersType = {\r\n    items:[],\r\n    totalCount:0,\r\n    pageSize:5,\r\n    currentPage:1,\r\n    loadingStatus:false\r\n}\r\n\r\nexport const usersReducer = (state:InitialStateUsersType=InitialState, action:CommonUsersActionType):InitialStateUsersType=> {\r\n    switch(action.type){\r\n        case ACTIONS_TYPE.FOLLOW_USER:\r\n            return {...state,\r\n                items: state.items.map(user=> user.id === action.userID ? {...user, followed:action.isFollow} : user)};\r\n        case ACTIONS_TYPE.GET_USERS:\r\n            return {...state, items:action.users}\r\n        case ACTIONS_TYPE.SET_CURRENT_PAGE:\r\n            return {...state, currentPage:action.page}\r\n        case ACTIONS_TYPE.SET_TOTAL_COUNT:\r\n            return {...state, totalCount:action.count}\r\n        case ACTIONS_TYPE.SET_LOADING_STATUS:\r\n            return {...state, loadingStatus:action.status}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const toFollow =(userID:number):AppThunk=>async dispatch=>{\r\n    try{\r\n        const res = await UsersAPI.setFollowStatus(userID)\r\n        if(res.data.resultCode===0){\r\n            dispatch(followUser(true,userID))\r\n        }\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\nexport const toUnFollow =(userID:number):AppThunk=>async dispatch=>{\r\n    try{\r\n        const res = await UsersAPI.deleteFollowStatus(userID)\r\n        if(res.data.resultCode===0){\r\n            dispatch(followUser(false,userID))\r\n        }\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\nexport const setUsers =(page:number, count:number):AppThunk=>async dispatch=>{\r\n    dispatch(setLoadingStatus(true))\r\n    try{\r\n        const res = await UsersAPI.getUsers(page,count)\r\n        dispatch(getUsersFromApi(res.data.items))\r\n        dispatch(setTotalCount(res.data.totalCount))\r\n    } catch (e) {\r\n\r\n    } finally{\r\n        dispatch(setLoadingStatus(false))\r\n    }\r\n}\r\nexport const setUsersForCurrentPage =(page:number, count:number):AppThunk=>async dispatch=>{\r\n    dispatch(setCurrentPage(page))\r\n    dispatch(setLoadingStatus(true))\r\n    try{\r\n        const res = await UsersAPI.getUsers(page,count)\r\n        dispatch(getUsersFromApi(res.data.items))\r\n    } catch (e) {\r\n\r\n    }finally{\r\n        dispatch(setLoadingStatus(false))\r\n    }\r\n}\r\n\r\nexport type InitialStateUsersType = {\r\n    items:UserType[]\r\n    totalCount:number\r\n    pageSize:number\r\n    currentPage:number\r\n    loadingStatus:boolean\r\n}","import React, {FC} from 'react';\r\n\r\nimport s from './Users.module.css'\r\nimport {Button} from \"@material-ui/core\";\r\nimport {UserType} from \"../../api/user-api\";\r\nimport {NavLink, useParams} from 'react-router-dom';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {toFollow, toUnFollow} from \"../redux/users-reducer\";\r\n\r\n\r\nexport const User: FC<UserType> = (\r\n    {\r\n        id, name, photos,\r\n        followed, status\r\n    }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const photo = photos.small !==null  ? photos.small : 'https://mythemestore.com/beehive-preview/wp-content/uploads/rtMedia/users/4/2020/05/woman-wearing-white-knitted-dress-709790-2-450x320.jpg'\r\n\r\n    const setToFollow =()=> {\r\n        dispatch(toFollow(id))\r\n    }\r\n    const setUnFollow =()=> {\r\n        dispatch(toUnFollow(id))\r\n    }\r\n    return (\r\n        <div className={s.UserBlock} key={id}>\r\n            <div className={s.followImgBlock}>\r\n                <NavLink to={`/profile/${id}`}>\r\n                    <div>\r\n                        <img src={photo} className={s.userImg} alt=\"\"/>\r\n                    </div>\r\n                </NavLink>\r\n\r\n                <div>\r\n                    <Button variant=\"contained\" color=\"primary\" size={'small'}\r\n                            onClick={followed ? setUnFollow : setToFollow}>\r\n                        {followed ? 'UNFOLLOW' : 'FOLLOW'}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <div>{name}</div>\r\n                    <div>{status}</div>\r\n                </div>\r\n                <div>\r\n                    <div>{'Moscow'}</div>\r\n                    <div>{'Russia'}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import s from \"./Users.module.css\";\r\nimport {User} from \"./User\";\r\nimport {Button, LinearProgress} from \"@material-ui/core\";\r\nimport React, {FC} from \"react\";\r\nimport {UserType} from \"../../api/user-api\";\r\n\r\n\r\ntype UsersCType = {\r\n    getUsersForCurrentPage: (pageNumber: number) => void\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    users: Array<UserType>\r\n    loadingStatus:boolean\r\n}\r\n\r\nexport const UsersC: FC<UsersCType> = ({\r\n                                           getUsersForCurrentPage,\r\n                                           totalCount,\r\n                                           pageSize,\r\n                                           currentPage,\r\n                                           users,\r\n                                           loadingStatus\r\n                                       }) => {\r\n\r\n    let pagesAmount = Math.ceil(totalCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i < pagesAmount && i < 21; i += 1) {\r\n        pages.push(i)\r\n    };\r\n\r\n    return (\r\n        <div className={s.usersContainer}>\r\n            {pages.map(pageNum => {\r\n                return <span key={pageNum} className={pageNum === currentPage ? s.selectedPage : s.pageNumber}\r\n                             onClick={(e) => getUsersForCurrentPage(pageNum)}>{pageNum}</span>\r\n            })}\r\n            {loadingStatus && <LinearProgress/>}\r\n\r\n            <div className={s.usersList}>\r\n                {users.map(user => <User id={user.id} name={user.name} photos={user.photos}\r\n                                               followed={user.followed} key={user.id}\r\n                                               status={user.status}\r\n                                               uniqueUrlName={user.uniqueUrlName}/>)}\r\n            </div>\r\n            <div className={s.showButton}>\r\n                <Button variant=\"contained\" color=\"primary\" size={'small'}>\r\n                    Show More\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n//---------------------------------------------------------------------------------------------------------\r\n// export class Users extends React.Component<UsersCommonType, AppRootStateType> {\r\n//\r\n//\r\n//     componentDidMount() {\r\n//         UsersAPI.getUsers(this.props.currentPage,this.props.pageSize)\r\n//             .then((res) => {\r\n//                 this.props.getUsersFromApi(res.data.items)\r\n//                 this.props.setTotalCount(res.data.totalCount)\r\n//             })\r\n//     }\r\n//     getUsersForCurrentPage(pageNumber:number){\r\n//         UsersAPI.getUsers(pageNumber,this.props.pageSize)\r\n//             .then((res) => {\r\n//                 this.props.getUsersFromApi(res.data.items)\r\n//                 this.props.setCurrentPage(pageNumber)\r\n//             })\r\n//     }\r\n//\r\n//     render() {\r\n//         let pagesAmount = Math.ceil(this.props.totalCount/this.props.pageSize);\r\n//         let pages = [];\r\n//         for(let i=1; i<pagesAmount && i<20; i+=1){\r\n//             pages.push(i)\r\n//         };\r\n//\r\n//         return (\r\n//             <div className={s.usersContainer}>\r\n//                 {pages.map(pageNum=> {\r\n//                     return <span className={pageNum===this.props.currentPage ? s.selectedPage : ''}\r\n//                                  onClick={()=>this.getUsersForCurrentPage(pageNum)}>{pageNum}</span>\r\n//                 })}\r\n//                 <div className={s.usersList}>\r\n//                     {this.props.users.map(user => <User id={user.id} name={user.name} photos={user.photos}\r\n//                                                         followed={user.followed} key={user.id}\r\n//                                                         toFollow={this.props.toFollow}\r\n//                                                         status={user.status}\r\n//                                                         uniqueUrlName={user.uniqueUrlName}/>)}\r\n//                 </div>\r\n//                 <div className={s.showButton}>\r\n//                     <Button variant=\"contained\" color=\"primary\" size={'small'}>\r\n//                         Show More\r\n//                     </Button>\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n//\r\n// };\r\n\r\n//-----------------------------------------------------------------------------------\r\n// import React, {FC, useEffect} from 'react';\r\n// import {UsersCommonType} from \"./UsersContainer\";\r\n// import s from './Users.module.css'\r\n// import {Button} from \"@material-ui/core\";\r\n// import {User} from \"./User\";\r\n// import {UsersAPI} from \"../../api/user-api\";\r\n//\r\n// export const Users: FC<UsersCommonType> = ({users,toFollow,getUsersFromApi}) => {\r\n//     useEffect(()=> {\r\n//         //@ts-ignore\r\n//         UsersAPI.getUsers()\r\n//             .then((res)=> {\r\n//                 getUsersFromApi(res.data.items)\r\n//             })\r\n//     }, [])\r\n//\r\n//     return (\r\n//         <div className={s.usersContainer}>\r\n//             <div className={s.usersList}>\r\n//                 {/*@ts-ignore*/}\r\n//                 {users.items.map(user => <User id={user.id} name={user.name} photos={user.photos}\r\n//                                                followed={user.followed} key={user.id} toFollow={toFollow}\r\n//                                                status={user.status} uniqueUrlName={user.uniqueUrlName}/>)}\r\n//             </div>\r\n//             <div className={s.showButton}>\r\n//                 <Button variant=\"contained\" color=\"primary\" size={'small'}>\r\n//                     Show More\r\n//                 </Button>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n","import { Navigate } from \"react-router-dom\"\r\nimport {AppRootStateType} from \"../Components/redux/store\";\r\nimport {connect} from \"react-redux\";\r\nimport {ComponentType} from \"react\";\r\n\r\n\r\nconst mapStateToProps =(state:AppRootStateType):mapStateToPropsType=> {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component:ComponentType<T>){\r\n    const RedirectComponent=(props:mapStateToPropsType)=>{\r\n        const{isAuth, ...restProps}=props\r\n        if(!isAuth) return <Navigate to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n    const RedirectContainer = connect(mapStateToProps)(RedirectComponent)\r\n    return RedirectContainer\r\n}\r\n\r\n\r\nexport type mapStateToPropsType = {\r\n    isAuth:boolean\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../redux/store\";\r\nimport {Profile} from \"./Profile\";\r\nimport {ProfileType} from \"../../api/user-api\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getProfileData, getUserStatusData, updateUserStatusData} from \"../redux/profile-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {toBeAuthorized} from \"../redux/auth-reducer\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component<PropsType,AppRootStateType>{\r\n\r\n    componentDidMount() {\r\n        let userId=this.props.userId\r\n        if(!userId) userId = this.props.authorizedId\r\n        this.props.getProfileData(userId)\r\n        this.props.getUserStatusData(userId)\r\n    };\r\n\r\n    render(){\r\n        return <Profile profile={this.props.profile} status={this.props.status}\r\n        handleUpdateStatus={this.props.updateUserStatusData}/>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps =(state:AppRootStateType):mapStateToPropsType=> {\r\n    return {\r\n        profile: state.profile.profile,\r\n        status: state.profile.status,\r\n        authorizedId: state.auth.id\r\n    }\r\n}\r\n\r\nconst withRouter = (WrappedComponent:any) => (props:any) => {\r\n    const {userId} = useParams();\r\n    return (\r\n        <WrappedComponent userId={userId} {...props}/>\r\n    );\r\n};\r\n\r\nconst withUrlData = withRouter(ProfileContainer);\r\nexport const ProfileConnector = withAuthRedirect(connect(mapStateToProps,\r\n    {getProfileData,getUserStatusData,updateUserStatusData})(withUrlData))\r\n\r\n\r\nexport type mapStateToPropsType = {\r\n    profile:ProfileType\r\n    status:string\r\n    authorizedId: string | null\r\n}\r\n\r\ntype mapDispatchPropsType = {\r\n    getProfileData: (userId:string | null)=> void\r\n    getUserStatusData: (userId:string | null)=> void\r\n    updateUserStatusData: (status:string)=> void\r\n}\r\ntype PathParamsType = {\r\n    userId:string | null\r\n}\r\n\r\nexport type ProfileContainerType = mapDispatchPropsType & mapStateToPropsType\r\nexport type PropsType = PathParamsType & ProfileContainerType\r\n\r\n\r\n\r\n\r\n//------------------------------------------------------------------------\r\n// import React, {useEffect} from 'react';\r\n// import {Profile} from \"../Profile\";\r\n// import {useDispatch, useSelector} from \"react-redux\";\r\n// import {AppRootStateType} from \"../../redux/store\";\r\n// import {ProfileType} from \"../../../api/user-api\";\r\n// import {useParams} from \"react-router-dom\";\r\n// import {getProfileData} from \"../../redux/profile-reducer\";\r\n// import {LinearProgress} from \"@material-ui/core\";\r\n//\r\n// export const ProfileOnHooks = () => {\r\n//     const profile = useSelector<AppRootStateType,ProfileType>(state => state.profile.profile)\r\n//     const dispatch = useDispatch()\r\n//     let {userId} = useParams()\r\n//\r\n//     useEffect(()=>{\r\n//         if(!userId) userId = '2'\r\n//         dispatch(getProfileData(userId))\r\n//     },[])\r\n//     if(!profile){\r\n//         return <LinearProgress/>\r\n//     }\r\n//     return (\r\n//         <div>\r\n//             <Profile profile={profile}/>\r\n//         </div>\r\n//     );\r\n// };","import {AppRootStateType} from \"../redux/store\";\r\nimport {connect} from \"react-redux\";\r\nimport {UserType} from \"../../api/user-api\";\r\nimport React from \"react\";\r\nimport {UsersC} from \"./UsersC\";\r\nimport {setUsers, setUsersForCurrentPage} from \"../redux/users-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersCommonType, AppRootStateType> {\r\n\r\n    // constructor(props: UsersCommonType) {\r\n    //     super(props)\r\n    //     UsersAPI.getUsers()\r\n    //         .then((res) => {\r\n    //             this.props.getUsersFromApi(res.data.items)\r\n    //         })\r\n    // }\r\n    componentDidMount() {\r\n        this.props.setUsers(this.props.currentPage, this.props.pageSize)\r\n    };\r\n\r\n    getUsersForCurrentPage = (pageNumber: number) => {\r\n        this.props.setUsersForCurrentPage(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <UsersC getUsersForCurrentPage={this.getUsersForCurrentPage} users={this.props.users}\r\n                       totalCount={this.props.totalCount}\r\n                       currentPage={this.props.currentPage} pageSize={this.props.pageSize}\r\n                       loadingStatus={this.props.loadingStatus}/>\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: AppRootStateType): mapStateToPropsType => {\r\n    return {\r\n        users: state.users.items,\r\n        totalCount: state.users.totalCount,\r\n        currentPage: state.users.currentPage,\r\n        pageSize: state.users.pageSize,\r\n        loadingStatus: state.users.loadingStatus\r\n    }\r\n}\r\n// export const UsersConnector = withAuthRedirect(connect(mapStateToProps, {\r\n//     setUsersForCurrentPage,setUsers\r\n// })(UsersContainer))\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {setUsersForCurrentPage,setUsers}),\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n\r\nexport type mapStateToPropsType = {\r\n    users: Array<UserType>\r\n    totalCount: number\r\n    currentPage: number\r\n    pageSize: number\r\n    loadingStatus: boolean\r\n}\r\n\r\ntype mapDispatchPropsType = {\r\n    setUsersForCurrentPage:(page:number, count:number)=>void\r\n    setUsers:(page:number, count:number)=>void\r\n}\r\nexport type UsersCommonType = mapDispatchPropsType & mapStateToPropsType","import React from 'react';\r\n\r\nimport {useFormik} from \"formik\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../redux/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {toBeLoggedIn} from \"../redux/auth-reducer\";\r\nimport {FormikErrorType} from \"../../api/user-api\";\r\nimport {LinearProgress} from \"@material-ui/core\";\r\n\r\n\r\n\r\nexport const Login = () => {\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.auth.isAuth)\r\n    // @ts-ignore\r\n    const errorMessage = useSelector<AppRootStateType, string | null>(state => state.auth.errorMessage)\r\n    const dispatch=useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email Required';\r\n            }\r\n            if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (values.password.length < 2) {\r\n                errors.password = 'Password should be at least 2 signs';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(toBeLoggedIn(values))\r\n            formik.resetForm()\r\n        },\r\n\r\n    })\r\n    // if(!isAuth){\r\n    //     return <LinearProgress/>\r\n    // }\r\n    if (isAuth) return <Navigate to={'/'}/>\r\n\r\n    return <Grid container justifyContent={'center'}>\r\n        <Grid item justifyContent={'center'}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}> here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField label='Email' margin=\"normal\"\r\n                                   {...formik.getFieldProps(\"email\")}\r\n                                   error={!!formik.errors.email && formik.touched.email}\r\n                                   helperText={formik.touched.email ? formik.errors.email : ''}\r\n                        />\r\n                        <TextField type=\"password\" label='Password' margin=\"normal\"\r\n                                   {...formik.getFieldProps(\"password\")}\r\n                                   error={!!formik.errors.password && formik.touched.password}\r\n                                   helperText={formik.touched.password ? formik.errors.password : ''}\r\n                            // name={\"password\"}\r\n                            // onChange={formik.handleChange}\r\n                            // value={formik.values.password}\r\n                            // onBlur={formik.handleBlur}\r\n                        />\r\n                        {errorMessage ? <div style={{color: \"red\"}}>{errorMessage}</div> : ''}\r\n                        <FormControlLabel label={'Remember me'} control={\r\n                            <Checkbox checked={formik.values.rememberMe}\r\n                                      {...formik.getFieldProps(\"rememberMe\")}/>\r\n                        }/>\r\n                        <Button type={'submit'} variant={'contained'} color={'primary'}>\r\n                            Login\r\n                        </Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n        </Grid>\r\n    </Grid>\r\n};\r\n\r\n","import React from \"react\";\r\nimport s from './Post.module.css'\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {ThumbUpAltSharp} from \"@material-ui/icons\";\r\nimport {PostType} from \"../../../redux/profile-reducer\";\r\n\r\n\r\n\r\nexport const Post: React.FC<PostType> = (\r\n    {\r\n        id,\r\n        avatar,\r\n        message,\r\n        likeCounts,\r\n    }) => {\r\n    return (\r\n        <div>\r\n            <div className={s.newpost} key={id}>\r\n                <img src={avatar} alt=\"\"/>\r\n                <div>\r\n                    {message}\r\n                    <div className={s.likes}>\r\n                        <IconButton size={'small'} color={\"primary\"} style={{padding: \"0\"}}>\r\n                            <ThumbUpAltSharp style={{fontSize: \"1rem\"}}/>\r\n                        </IconButton>\r\n                        <span> {likeCounts}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport {Post} from \"./Post/Post\";\r\nimport {Button, Container, Grid, TextField} from \"@material-ui/core\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../redux/store\";\r\nimport {PostType} from \"../../redux/profile-reducer\";\r\nimport {addPostAC} from \"../../redux/actions\";\r\n\r\n//------------------------------------------------------------------------------------------\r\n\r\nexport const MyPosts:React.FC = () => {\r\n    const posts = useSelector<AppRootStateType, Array<PostType>>(state=>state.profile.posts)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [value,setValue]=useState('')\r\n    const changeNewPostMessage = (e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) =>{\r\n        setValue(e.currentTarget.value)\r\n    }\r\n    const addingPost = () => {\r\n        dispatch(addPostAC(value))\r\n        setValue('')\r\n    }\r\n    return (\r\n        <div className={s.myposts}>\r\n            <Container fixed>\r\n                <form noValidate autoComplete=\"off\" >\r\n                    <TextField id=\"outlined-basic\" label=\"Write a post\" fullWidth={true} onChange={changeNewPostMessage}\r\n                               value={value}  variant=\"outlined\" style={{margin: \"20px 0 10px 0\"}} multiline={true}\r\n                    />\r\n                    <Grid container justify={\"flex-end\"}>\r\n                        <div></div>\r\n                        <Button variant=\"contained\" color=\"primary\" size={'small'} onClick={addingPost}>\r\n                            ADD POST\r\n                        </Button>\r\n                    </Grid>\r\n                </form>\r\n            </Container>\r\n            <div>\r\n                {posts.length && posts.map(post=> <Post avatar={post.avatar} id={post.id}\r\n                                        likeCounts={post.likeCounts} message={post.message} key={post.id}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, FC, useState} from \"react\";\r\n\r\ntype ProfileStatusType = {\r\n    status:string\r\n    handleUpdateStatus:(status:string)=> void\r\n}\r\n\r\n\r\nexport const ProfileStatus: FC<ProfileStatusType> = ({status, handleUpdateStatus}) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [value, setValue] = useState<string>(status)\r\n\r\n   const activateEditMode=()=>{\r\n       setEditMode(true)\r\n    }\r\n    const deActivateEditMode=()=>{\r\n        setEditMode(false)\r\n        handleUpdateStatus(value)\r\n    }\r\n    const setUpdatedStatus=(event:ChangeEvent<HTMLInputElement>)=>{\r\n        setValue(event.currentTarget.value)\r\n    }\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{status ? status : 'no status'}</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                <div>\r\n                    <input onBlur={deActivateEditMode} autoFocus={true} type=\"text\"\r\n                        value={value}\r\n                    onChange={setUpdatedStatus}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\n\r\n\r\n// type ProfileStatusType = {\r\n//     status:string\r\n//     handleUpdateStatus:(status:string)=> void\r\n// }\r\n//\r\n//\r\n// export class ProfileStatus extends React.Component<ProfileStatusType>{\r\n//     state = {\r\n//         editMode:false,\r\n//         value:this.props.status\r\n//     }\r\n//     activateEditMode=()=>{\r\n//         this.setState({\r\n//             editMode:true\r\n//         })\r\n//     }\r\n//     deActivateEditMode=()=>{\r\n//         this.setState({\r\n//             editMode:false,\r\n//         })\r\n//         this.props.handleUpdateStatus(this.state.value)\r\n//     }\r\n//     setUpdatedStatus=(event:ChangeEvent<HTMLInputElement>)=>{\r\n//         this.setState({\r\n//             value:event.currentTarget.value\r\n//         })\r\n//     }\r\n//\r\n//     render(){\r\n//         return (\r\n//             <div>\r\n//                 {!this.state.editMode &&\r\n//                 <div>\r\n//                     <span onDoubleClick={this.activateEditMode}>{this.props.status ? this.props.status : 'no status'}</span>\r\n//                 </div>\r\n//                 }\r\n//                 {this.state.editMode &&\r\n//                 <div>\r\n//                     <input onBlur={this.deActivateEditMode} autoFocus={true} type=\"text\"\r\n//                            value={this.state.value}\r\n//                            onChange={this.setUpdatedStatus}/>\r\n//                 </div>\r\n//                 }\r\n//             </div>\r\n//         )\r\n//     }\r\n// }","import s from \"../Profile.module.css\";\r\nimport React from \"react\";\r\nimport {ProfileInfoType} from \"../Profile\";\r\nimport {LinearProgress} from \"@material-ui/core\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\n\r\n\r\nexport const ProfileInfo:React.FC<ProfileInfoType> = ({profile,status,handleUpdateStatus}) => {\r\n    if(!profile){\r\n        return <LinearProgress/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.background}></div>\r\n            <div className={s.info}>\r\n                <div>\r\n                    {/*@ts-ignore*/}\r\n                    <img src={profile.photos.large} alt=\"\"/>\r\n                </div>\r\n                <div>\r\n                    <div className={s.name}>{profile.fullName}</div>\r\n                    <div>{profile.aboutMe}</div>\r\n                    <ProfileStatus status={status} handleUpdateStatus={handleUpdateStatus}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// export const ProfileInfo:React.FC<ProfileInfoType> = ({profile}) => {\r\n//     return (\r\n//         <div>\r\n//             <div className={s.background}></div>\r\n//             <div className={s.info}>\r\n//                 <div>\r\n//                     <img src=\"https://cdnimg.rg.ru/img/content/165/89/88/kinopoisk.ru-Shrek-2-644132_d_850.jpg\" alt=\"\"/>\r\n//                 </div>\r\n//                 <div className={s.name}>\r\n//                     Kirill Zarya\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }","import React from \"react\";\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {ProfileType} from \"../../api/user-api\";\r\n\r\nexport type ProfileInfoType={\r\n    profile:ProfileType\r\n    status:string\r\n    handleUpdateStatus:(status:string)=> void\r\n}\r\n\r\n\r\nexport const Profile:React.FC<ProfileInfoType> = ({profile,status,handleUpdateStatus}) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={profile} status={status} handleUpdateStatus={handleUpdateStatus}/>\r\n            <MyPosts/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import {ACTIONS_TYPE, getProfile, ProfileActionType, setUserStatus} from \"./actions\";\r\nimport {v1} from \"uuid\";\r\nimport {ProfileType, UsersAPI} from \"../../api/user-api\";\r\nimport {AppThunk} from \"./store\";\r\n\r\n\r\nconst InitialState: ProfilePageType ={\r\n    posts: [\r\n        {\r\n            id: v1(),\r\n            avatar: \"https://mythemestore.com/beehive-preview/wp-content/uploads/avatars/6/5e2cccd55f95b-bpthumb.jpg\",\r\n            message: 'Hello my friend',\r\n            likeCounts: 15\r\n        },\r\n        {\r\n            id: v1(),\r\n            avatar: \"https://mythemestore.com/beehive-preview/wp-content/uploads/avatars/12/5e2cfd5d1d7c0-bpthumb.jpg\",\r\n            message: 'Nice to see you again',\r\n            likeCounts: 20\r\n        },\r\n    ],\r\n    // profile: {aboutMe: \"я круто чувак 1001%\",\r\n    //     contacts: {\r\n    //         facebook: \"facebook.com\",\r\n    //         website: null,\r\n    //         vk: \"vk.com/dimych\",\r\n    //         twitter: \"https://twitter.com/@sdf\",\r\n    //         instagram: \"instagra.com/sds\",\r\n    //         youtube: null,\r\n    //         github: \"github.com\",\r\n    //         mainLink: null\r\n    //     },\r\n    //     \"lookingForAJob\": true,\r\n    //     \"lookingForAJobDescription\": \"не ищу, а дурачусь\",\r\n    //     \"fullName\": \"samurai dimych\",\r\n    //     \"userId\": 2,\r\n    //     \"photos\": {\r\n    //         \"small\": \"https://social-network.samuraijs.com/activecontent/images/users/2/user-small.jpg?v=0\",\r\n    //         \"large\": \"https://social-network.samuraijs.com/activecontent/images/users/2/user.jpg?v=0\"\r\n    //     }}\r\n    // @ts-ignore\r\n    profile:null,\r\n    status:''\r\n\r\n}\r\n\r\nexport const profileReducer =(state = InitialState,action:ProfileActionType):ProfilePageType=>{\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.ADD_POST:\r\n            let newPost: PostType = {\r\n                id: v1(),\r\n                avatar: \"https://mythemestore.com/beehive-preview/wp-content/uploads/avatars/12/5e2cfd5d1d7c0-bpthumb.jpg\",\r\n                message: action.newText,\r\n                likeCounts: 0\r\n            };\r\n            return {...state, posts:[...state.posts,newPost]}\r\n\r\n        case ACTIONS_TYPE.GET_PROFILE:\r\n            return {...state, profile:action.profile}\r\n        case ACTIONS_TYPE.SET_USER_STATUS:\r\n            return {...state, status:action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getProfileData =(userID:string):AppThunk=>async dispatch=>{\r\n    try{\r\n        const res = await UsersAPI.getProfile(userID)\r\n        dispatch(getProfile(res.data))\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\nexport const getUserStatusData =(userID:string):AppThunk=>async dispatch=>{\r\n    try{\r\n        const res = await UsersAPI.getUserStatus(userID)\r\n        dispatch(setUserStatus(res.data))\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\nexport const updateUserStatusData =(status:string):AppThunk=>async dispatch=>{\r\n    try{\r\n        const res = await UsersAPI.updateUserStatus(status)\r\n        if(res.data.resultCode === 0){\r\n            dispatch(setUserStatus(status))\r\n        }\r\n\r\n    } catch (e) {\r\n\r\n    }\r\n}\r\n\r\n//-----------------------------------------------------------------\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    profile: ProfileType\r\n    status:string\r\n}\r\nexport type PostType = {\r\n    id: string\r\n    avatar: string\r\n    message: string\r\n    likeCounts: number\r\n}","import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport './App.css';\nimport {NavBar} from \"./Components/NavBar/NavBar\";\nimport {Route, Routes} from \"react-router-dom\";\nimport {Dialogs} from \"./Components/Dialogs/Dialogs\";\nimport {News} from \"./Components/News/News\";\nimport {Music} from \"./Components/Music/Music\";\nimport {Settings} from \"./Components/Settings/Settings\";\nimport {AuthDataConnector} from \"./Components/Header/HeaderContainer\";\n\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport {Login} from \"./Components/Login/Login\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {AppRootStateType} from \"./Components/redux/store\";\nimport {toBeAuthorized} from \"./Components/redux/auth-reducer\";\nimport {ProfileConnector} from \"./Components/Profile/ProfileContainer\";\n\n\nexport const App = () => {\n    const isInitialized = useSelector<AppRootStateType, boolean>(state => state.loader.isInitialized)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(toBeAuthorized())\n    }, [])\n    if (!isInitialized) {\n        return <div\n            style={{position: 'fixed', top: '30%', textAlign: 'center', width: '100%'}}>\n            <CircularProgress/>\n        </div>\n    }\n    return (\n        <div className={'app-wrapper'}>\n            <AuthDataConnector/>\n            <NavBar/>\n            <div className={'content'}>\n                <Routes>\n                    <Route path={'/'} element={<ProfileConnector/>}/>\n                    <Route path={'/profile/:userId'} element={<ProfileConnector/>}/>\n                    <Route path={'/profile'} element={<ProfileConnector/>}/>\n                    <Route path={'/dialogs'} element={<Dialogs/>}/>\n                    <Route path={'/news'} element={<News/>}/>\n                    <Route path={'/music'} element={<Music/>}/>\n                    <Route path={'/settings'} element={<Settings/>}/>\n                    <Route path={'/users'} element={<UsersContainer/>}/>\n                    <Route path={'/login'} element={<Login/>}/>\n                    <Route path={'/Social_trial_01'} element={<ProfileConnector/>}/>\n                </Routes>\n            </div>\n        </div>\n    );\n}\n\n\n\n//------------------------------------------------------------------------------------\n// class AppContainer extends React.Component<PropsType, AppRootStateType> {\n//\n//     componentDidMount() {\n//         this.props.toBeAuthorized()\n//     };\n//\n//     render() {\n//         if (!this.props.isInitialized) {\n//             return <div\n//                 style={{position: 'fixed', top: '30%', textAlign: 'center', width: '100%'}}>\n//                 <CircularProgress/>\n//             </div>\n//         }\n//         return (\n//             <div className={'app-wrapper'}>\n//                 <AuthDataConnector/>\n//                 <NavBar/>\n//                 <div className={'content'}>\n//                     <Routes>\n//                         <Route path={'/'} element={<ProfileConnector/>}/>\n//                         <Route path={'/profile/:userId'} element={<ProfileConnector/>}/>\n//                         <Route path={'/profile'} element={<ProfileConnector/>}/>\n//                         <Route path={'/dialogs'} element={<Dialogs/>}/>\n//                         <Route path={'/news'} element={<News/>}/>\n//                         <Route path={'/music'} element={<Music/>}/>\n//                         <Route path={'/settings'} element={<Settings/>}/>\n//                         <Route path={'/users'} element={<UsersContainer/>}/>\n//                         <Route path={'/login'} element={<Login/>}/>\n//                         <Route path={'/Social_trial_01'} element={<ProfileConnector/>}/>\n//                     </Routes>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n//\n//\n// const mapStateToProps = (state: AppRootStateType): mapStateToPropsType => {\n//     return {\n//         isInitialized: state.loader.isInitialized\n//     }\n// }\n//\n// const withRouter = (WrappedComponent: any) => (props: any) => {\n//     const {userId} = useParams();\n//     return (\n//         <WrappedComponent userId={userId} {...props}/>\n//     );\n// };\n//\n// const withUrlData = withRouter(AppContainer);\n// export const App = connect(mapStateToProps,\n//     {toBeAuthorized})(withUrlData)\n//\n//\n// export type mapStateToPropsType = {\n//     isInitialized: boolean\n// }\n//\n// type mapDispatchPropsType = {\n//     toBeAuthorized: () => void\n//\n// }\n// type PathParamsType = {\n//     userId: string | null\n// }\n//\n// export type ProfileContainerType = mapDispatchPropsType & mapStateToPropsType\n// export type PropsType = PathParamsType & ProfileContainerType\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ACTIONS_TYPE,  SendMessageActionType} from \"./actions\";\r\nimport {v1} from \"uuid\";\r\n\r\n\r\n//-----------------------------------------------------------------------------------\r\nconst InitialState: DialogPageType = {\r\n    senders: [\r\n        {\r\n            id: v1(),\r\n            name: 'Andrey',\r\n            avatar: 'https://mythemestore.com/beehive-preview/wp-content/uploads/avatars/14/5e2d01291b6b9-bpthumb.jpg'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Viktoria',\r\n            avatar: 'https://mythemestore.com/beehive-preview/wp-content/uploads/rtMedia/users/4/2020/05/woman-wearing-white-knitted-dress-709790-2-450x320.jpg'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Jessica',\r\n            avatar: 'https://mythemestore.com/beehive-preview/wp-content/uploads/avatars/6/5e2cccd55f95b-bpthumb.jpg'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Ashley',\r\n            avatar: 'https://mythemestore.com/beehive-preview/wp-content/uploads/rtMedia/users/4/2020/05/woman-wearing-white-knitted-dress-709790-2-450x320.jpg'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Milana',\r\n            avatar: 'https://mythemestore.com/beehive-preview/wp-content/uploads/avatars/12/5e2cfd5d1d7c0-bpthumb.jpg'\r\n        },\r\n    ],\r\n    messages: [\r\n        {id: v1(), message: 'Privet Medved'},\r\n        {id: v1(), message: 'Hallo malloy'},\r\n        {id: v1(), message: 'Nice very nice'},\r\n        {id: v1(), message: 'Call me ASAP'},\r\n        {id: v1(), message: 'Prosto message'},\r\n    ],\r\n}\r\n//---------------------------------------------------------------------------------\r\nexport const dialogReducer = (state = InitialState, action: SendMessageActionType): DialogPageType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SEND_MESSAGE:\r\n            let newMessage: MessagesType = {\r\n                id: v1(),\r\n                message: action.newMessage,\r\n            };\r\n            return {...state, messages:[...state.messages,newMessage]}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport type DialogPageType = {\r\n    senders: senderType[]\r\n    messages: MessagesType[]\r\n}\r\nexport type senderType = {\r\n    id: string\r\n    name: string\r\n    avatar?: string\r\n}\r\nexport type MessagesType = {\r\n    id: string\r\n    message: string\r\n}","import {ACTIONS_TYPE, LoaderActionType} from \"./actions\";\r\n\r\nexport const InitialLoaderState:InitialLoaderStateType ={\r\n    isInitialized:false,\r\n}\r\n\r\n\r\nexport const loaderReducer = (state: InitialLoaderStateType  = InitialLoaderState, action: LoaderActionType):InitialLoaderStateType=> {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.GET_INITIALIZED:\r\n            return {...state, isInitialized:action.initialized}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//-------------------------------------------------------------------------------------\r\n\r\n\r\nexport type InitialLoaderStateType={\r\n    isInitialized: boolean\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {dialogReducer} from \"./dialog-reducer\";\r\nimport {usersReducer} from \"./users-reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {\r\n    AuthDataActionType,\r\n    CommonUsersActionType,\r\n    LoaderActionType,\r\n    ProfileActionType,\r\n    SendMessageActionType\r\n} from \"./actions\";\r\nimport {loaderReducer} from \"./loader-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    profile:profileReducer,\r\n    dialog: dialogReducer,\r\n    users:usersReducer,\r\n    auth:authReducer,\r\n    loader: loaderReducer,\r\n})\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport type AppActionsType = ProfileActionType | SendMessageActionType | CommonUsersActionType\r\n    | AuthDataActionType | LoaderActionType\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionsType>\r\n\r\n//AppActionsType -- общий тип всех редьюсеров\r\n// AppThunk -- единый тип для санок\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Components/redux/store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__3tKZJ\",\"item\":\"NavBar_item__2I2Mw\",\"active\":\"NavBar_active__36KBT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__ZDnnN\",\"messageBlock\":\"Dialogs_messageBlock__19Cx0\",\"senders\":\"Dialogs_senders__To8dY\",\"active\":\"Dialogs_active__2XU9f\",\"senderAva\":\"Dialogs_senderAva__2IEpX\",\"senderInfo\":\"Dialogs_senderInfo__2Akn7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserBlock\":\"Users_UserBlock__3QqGW\",\"usersList\":\"Users_usersList__2dk-_\",\"followImgBlock\":\"Users_followImgBlock__3idSL\",\"userImg\":\"Users_userImg__62hiJ\",\"showButton\":\"Users_showButton__1pTKv\",\"usersContainer\":\"Users_usersContainer__22vIO\",\"selectedPage\":\"Users_selectedPage__2p45e\",\"pageNumber\":\"Users_pageNumber__14svS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3L0Jb\",\"loginLink\":\"Header_loginLink__3b9up\",\"login\":\"Header_login__1jOx6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Profile_background__3pIh2\",\"info\":\"Profile_info__32_Sl\",\"name\":\"Profile_name__jxmlT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newpost\":\"Post_newpost__2GemB\",\"likes\":\"Post_likes__Wz--X\"};"],"sourceRoot":""}